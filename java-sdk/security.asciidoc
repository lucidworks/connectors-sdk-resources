= Java SDK Connector SSL Support

See the main 
ifdef::env-github[]
link:../security.asciidoc[custom connector security overview] 
endif::[]
ifndef::env-github[]
link:https://doc.lucidworks.com/how-to/develop-custom-connectors.html#java-sdk-security[custom connector security overview] 
endif::[]
for instructions on how to configure SSL/TLS support for a Fusion custom connector.

== Java Plugin Client
The information here is specific to running a Java SDK plugin outside of Fusion.

The 
ifdef::env-github[]
link:plugin-client.asciidoc[plugin-client]
endif::[]
ifndef::env-github[]
link:https://doc.lucidworks.com/how-to/java-connector-dev.html#plugin-client[plugin-client]
endif::[]
supports several variations of SSL/TLS auth. The examples below show the relevant Java properties.

**Example with Mutual TLS auth and private key passwords**

```
-Dcom.lucidworks.apollo.app.hostname=myhost
-Dcom.lucidworks.fusion.tls.trustCertCollection=./sslcerts/ca.crt
-Dcom.lucidworks.fusion.tls.client.certChain=./sslcerts/client.crt
-Dcom.lucidworks.fusion.tls.client.privateKey=./sslcerts/client.pem
-Dcom.lucidworks.fusion.tls.client.privateKeyPassword=password123
-Dcom.lucidworks.fusion.tls.enabled=true</td>
```

**Example without TLS auth and no private key passwords****:**

```
-Dcom.lucidworks.apollo.app.hostname=myhost
-Dcom.lucidworks.fusion.tls.trustCertCollection=./sslcerts/ca.crt
-Dcom.lucidworks.fusion.tls.enabled=true
```
